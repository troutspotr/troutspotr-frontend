@import 'src/ui/styles/_colors';
@import 'src/ui/styles/_variables';
@import 'src/ui/styles/_fonts';
@import 'src/ui/styles/fallback';

.container {}

.title {
  color: $white;
  text-decoration: none;
  font-size: 18px;
  line-height: 1.1;
  font-family: sans-serif;
  font-weight: 500;
  margin-bottom: 5px;
  margin-top: 20px;
}

.list {
  columns: 2 2em;
  column-gap: 1em;
  font-size: 1.0em;
}

@media (orientation: portrait) and (min-width: 801px) {
  .list {
    columns: 3 2em;
    column-gap: 1em;
    font-size: 1.0em;
  }
}

@media (orientation: portrait) and (max-width: 800px) {
  .list {
    columns: 2 2em;
    column-gap: 1em;
    font-size: 1.0em;
  }
}

@media (orientation: portrait) and (max-width: 450px) {
  .list {
    columns: 1 2em;
    column-gap: 1em;
    font-size: 1.0em;
  }
}

@media (orientation: landscape) and (min-width: 1300px) {
  .list {
    columns: 3 2em;
    column-gap: 1em;
    font-size: 1.0em;
  }
}

@media (orientation: landscape) and (max-width: 855px) {
  .list {
    columns: 2 2em;
    column-gap: 1em;
    font-size: 1.0em;
  }
}

@media (orientation: landscape) and (max-width: 854px) {
  .list {
    columns: 1 2em;
    column-gap: 1em;
    font-size: 1.0em;
  }
}

.listItemBasis {
  // font-size: 12px;
  clear: both;
  // margin-bottom: 10px;
  display: inline-flex;
  transition: color 800ms;
  @include fallback(color, --text-color-primary, $backgroundDark);
  text-decoration: none;
}

.listItem {
  composes: listItemBasis;

  // font-size: 12px;
  // clear: both;
  // margin-bottom: 10px;
  // display: inline-flex;
  // width: 100%;
  cursor: pointer;

  // color: $off-white;
}

.hoveredItem {
  composes: listItem;
  text-decoration: underline;
}

.selectedItem {
  composes: listItem;
  font-weight: bold;
  text-decoration: underline;
  margin-bottom: 0px;
  margin-left: 0.3rem;
}

.listText {
  flex-grow: 1;
  order: 2;
}

.listHeader {
  composes: listItem;
  color: $white;
  text-decoration: none !important;
  cursor: default;
}

.listHeader:not(:first-child) {
  margin-top: 5px;
  margin-bottom: 2px;
}

.badge {
  font-size: 12px;
  order: 1;
  margin-right: 3px;
}

.publicBridgeTroutStream {
  // composes: numberCircle;
  // composes: badge;
  // color: $green;
}

.bridgeOverTroutStream {
  // composes: numberCircle;
  // composes: badge;
  // color: $blue;
}

.unsafeBridgeOverTroutStream {
  // composes: numberCircle;
  // composes: badge;
  // color: $blueGray;
}

.bridge {
  // composes: numberCircle;
  // color: $gray;
  font-size: 12px;
  order: 1;
}

.selectedBridge {
  // composes: bridge;
  font-weight: bold;
  color: black !important;

  // the only time you'll see black in this app
}

.googleLink {
  // color: $blue;
  @include fallback(color, --blue, $blueDark);
  display: inline;
  text-decoration: none;
  font-weight: normal;
  pointer-events: all;
}

.googleLink:after {
  content: '\29C9';
}

.species {
  font-size: 12px;
}

.brownTrout {
  // composes: zeldaText;
  // color: $yellow;
}

.brookTrout {
  // composes: zeldaText;
  // color: $green;
}

.rainbowTrout {
  // composes: zeldaText;
  // color: $red;
}

.number {
  // composes: zeldaText;
  // order: 2;
  // text-align: left;
}

.totalMiles {
  // composes: number;
  // color: $off-white;
}

.troutMiles {
  // composes: number;
  // color: $blue;
}

.publicMiles {
  // composes: number;
  // color: $green;
}

.summaryContainer {
  // display: flex;
  // align-items: baseline;
}

.marker {
  // min-width: 10px;
  // order: 1;
  // display: inline-block;
  // margin-right: 4px;
}

.publicMarker {
  // composes: marker;
  // height: 0.3em;
  // background-color: $green;
}

.troutMarker {
  // composes: marker;
  // height: 0.2em;
  // background-color: $blue;
}

.waterMarker {
  // composes: marker;
  // height: 0.1em;
  // background-color: $blueGray;
}
